[
    {
        "name": "_ampl_elapsed_time",
        "datatype": "float",
        "description": "elapsed seconds since the start of the AMPL process",
        "type": "constant"
    },
    {
        "name": "_ampl_system_time",
        "datatype": "float",
        "description": "system CPU seconds used by the AMPL process itself",
        "type": "constant"
    },
    {
        "name": "_ampl_time",
        "datatype": "float",
        "description": "ampl system time + ampl user time",
        "type": "constant"
    },
    {
        "name": "_ampl_user_time",
        "datatype": "float",
        "description": "user CPU seconds used by the AMPL process itself",
        "type": "constant"
    },
    {
        "name": "_cconname",
        "datatype": "set",
        "description": "names of complementarity constraints _cconname{1.._nccons}",
        "type": "constant"
    },
    {
        "name": "_conname",
        "datatype": "set",
        "description": "names of constraints in current model _conname{1.._ncons}",
        "type": "constant"
    },
    {
        "name": "_CONS",
        "datatype": "set",
        "description": "set of all declared constraint names",
        "type": "constant"
    },
    {
        "name": "_con",
        "datatype": "set",
        "description": "synonyms for constraints in current model _con{1.._ncons}",
        "type": "constant"
    },
    {
        "name": "_ENVS",
        "datatype": "set",
        "description": "set of all declared environment names",
        "type": "constant"
    },
    {
        "name": "_FUNCS",
        "datatype": "set",
        "description": "set of all declared user-defined functions",
        "type": "constant"
    },
    {
        "name": "_nccons",
        "datatype": "integer",
        "description": "number of complementarity constraints before presolve",
        "type": "constant"
    },
    {
        "name": "_ncons",
        "datatype": "integer",
        "description": "number of constraints in current model",
        "type": "constant"
    },
    {
        "name": "_nobjs",
        "datatype": "integer",
        "description": "number of objectives in current model",
        "type": "constant"
    },
    {
        "name": "_objname{1.._nobjs}",
        "datatype": "set",
        "description": "names of objectives in current model",
        "type": "constant"
    },
    {
        "name": "_OBJS",
        "datatype": "set",
        "description": "set of all declared objective names",
        "type": "constant"
    },
    {
        "name": "_obj{1.._nobjs}",
        "datatype": "set",
        "description": "synonyms for objectives in current model",
        "type": "constant"
    },
    {
        "name": "_PARS",
        "datatype": "set",
        "description": "set of all declared parameter names",
        "type": "constant"
    },
    {
        "name": "_PROBS",
        "datatype": "set",
        "description": "set of all declared problem names",
        "type": "constant"
    },
    {
        "name": "_scvar{1.._sncons}",
        "datatype": "set",
        "description": "if _scvar[i] > 0, _svar[scvar[i]] complements _scon[i]",
        "type": "constant"
    },
    {
        "name": "_SETS",
        "datatype": "set",
        "description": "set of all declared set names",
        "type": "constant"
    },
    {
        "name": "_shell_elapsed_time",
        "datatype": "float",
        "description": "elapsed seconds for most recent shell command",
        "type": "constant"
    },
    {
        "name": "_shell_system_time",
        "datatype": "float",
        "description": "system CPU seconds used by most recent shell command",
        "type": "constant"
    },
    {
        "name": "_shell_time",
        "datatype": "float",
        "description": "shell system time + shell user time",
        "type": "constant"
    },
    {
        "name": "_shell_user_time",
        "datatype": "float",
        "description": "user CPU seconds used by most recent shell command",
        "type": "constant"
    },
    {
        "name": "_snbvars",
        "datatype": "integer",
        "description": "number of binary (0,1) variables",
        "type": "constant"
    },
    {
        "name": "_snccons",
        "datatype": "integer",
        "description": "number of complementarity constraints after presolve",
        "type": "constant"
    },
    {
        "name": "_snivars",
        "datatype": "integer",
        "description": "number of general integer variables (excluding binaries)",
        "type": "constant"
    },
    {
        "name": "_snlcc",
        "datatype": "integer",
        "description": "number of linear complementarity constraints",
        "type": "constant"
    },
    {
        "name": "_snlnc",
        "datatype": "integer",
        "description": "number of linear network constraints",
        "type": "constant"
    },
    {
        "name": "_snnlcc",
        "datatype": "integer",
        "description": "number of nonlinear compl. constrs.: _snccons=_snlcc+_snnlcc",
        "type": "constant"
    },
    {
        "name": "_snnlcons",
        "datatype": "integer",
        "description": "number of nonlinear constraints",
        "type": "constant"
    },
    {
        "name": "_snnlnc",
        "datatype": "integer",
        "description": "number of nonlinear network constraints",
        "type": "constant"
    },
    {
        "name": "_snnlobjs",
        "datatype": "integer",
        "description": "number of nonlinear objectives",
        "type": "constant"
    },
    {
        "name": "_snnlv",
        "datatype": "integer",
        "description": "number of nonlinear variables",
        "type": "constant"
    },
    {
        "name": "_snzcons",
        "datatype": "integer",
        "description": "number of constraint Jacobian matrix nonzeros",
        "type": "constant"
    },
    {
        "name": "_snzobjs",
        "datatype": "integer",
        "description": "number of objective gradient nonzeros",
        "type": "constant"
    },
    {
        "name": "_solve_elapsed_time",
        "datatype": "float",
        "description": "elapsed seconds for most recent solve command",
        "type": "constant"
    },
    {
        "name": "_solve_system_time",
        "datatype": "float",
        "description": "system CPU seconds used by most recent solve command",
        "type": "constant"
    },
    {
        "name": "_solve_time",
        "datatype": "float",
        "description": "solve system time + solve user time",
        "type": "constant"
    },
    {
        "name": "_solve_user_time",
        "datatype": "float",
        "description": "user CPU seconds used by most recent solve command",
        "type": "constant"
    },
    {
        "name": "_total_shell_elapsed_time",
        "datatype": "float",
        "description": "elapsed seconds used by all shell commands",
        "type": "constant"
    },
    {
        "name": "_total_shell_system_time",
        "datatype": "float",
        "description": "system CPU seconds used by all shell commands",
        "type": "constant"
    },
    {
        "name": "_total_shell_time",
        "datatype": "float",
        "description": "total shell system time + total shell user time",
        "type": "constant"
    },
    {
        "name": "_total_shell_user_time",
        "datatype": "float",
        "description": "user CPU seconds used by all shell commands",
        "type": "constant"
    },
    {
        "name": "_total_solve_elapsed_time",
        "datatype": "float",
        "description": "elapsed seconds used by all solve commands",
        "type": "constant"
    },
    {
        "name": "_total_solve_system_time",
        "datatype": "float",
        "description": "system CPU seconds used by all solve commands",
        "type": "constant"
    },
    {
        "name": "_total_solve_time",
        "datatype": "float",
        "description": "total solve system time + total solve user time",
        "type": "constant"
    },
    {
        "name": "_total_solve_user_time",
        "datatype": "float",
        "description": "user CPU seconds used by all solve commands",
        "type": "constant"
    },
    {
        "name": "_varname{1.._nvars}",
        "datatype": "set",
        "description": "names of variables in current model",
        "type": "constant"
    },
    {
        "name": "_VARS",
        "datatype": "set",
        "description": "set of all declared variable names",
        "type": "constant"
    },
    {
        "name": "_var{1.._nvars}",
        "datatype": "set",
        "description": "synonyms for variables in current model",
        "type": "constant"
    },
    {
        "name": "abs",
        "datatype": "float",
        "description": "absolute value x",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "acos",
        "datatype": "float",
        "description": "inverse cosine,cos^-1",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "acosh",
        "datatype": "float",
        "description": "inverse hyperbolic cosine,cosh^-1",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "alias",
        "datatype": "object",
        "description": "returns alias of model entity v",
        "example": "",
        "parameters": [
            {
                "name": "v",
                "description": "object to alias",
                "type": "object"
            }
        ],
        "type": "function"
    },
    {
        "name": "all",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "and",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "arc",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "arity",
        "datatype": "integer",
        "description": "arity of S if S is a set, else 0; for use with _SETS",
        "example": "",
        "parameters": [
            {
                "name": "S",
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "asin",
        "datatype": "float",
        "description": "inverse sine,sin^-1 ",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "asinh",
        "datatype": "float",
        "description": "inverse hyperbolic sine,sinh^-1 ",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "atan",
        "datatype": "float",
        "description": "inverse tangent,tan^-1 ",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "atan2",
        "datatype": "float",
        "description": "inverse tangent,tan^-1 (y / x)",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            },
            {
                "name": "y",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "atanh",
        "datatype": "float",
        "description": "inverse hyperbolic tangent,tanh^-1 ",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "Beta",
        "datatype": "number",
        "description": "Returns a random value from a Beta distribution. density(x) = x a^-1 ( 1^-x) b^-1 /(gamma(a) gamma(b)/gamma(a + b) ), x in [ 0 , 1 ]",
        "example": "",
        "parameters": [
            {
                "name": "a",
                "default": 1,
                "max": 100,
                "min": 0,
                "type": "float"
            },
            {
                "name": "b",
                "default": 1,
                "max": 100,
                "min": 0,
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "binary",
        "description": "",
        "type": "type"
    },
    {
        "name": "break",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "by",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "call",
        "description": "invoke imported function",
        "type": "keyword"
    },
    {
        "name": "card",
        "datatype": "integer",
        "description": "number of members in set S",
        "example": "",
        "parameters": [
            {
                "name": "S",
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "Cauchy",
        "datatype": "number",
        "description": "Returns a random value from a Cauchy distribution. density(x) = 1/(pi( 1 + x 2 ) )",
        "example": "",
        "parameters": [],
        "type": "function"
    },
    {
        "name": "cd",
        "description": "change current directory",
        "type": "keyword"
    },
    {
        "name": "ceil",
        "datatype": "float",
        "description": "ceiling of x (next higher integer)",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "real number",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "char",
        "datatype": "string",
        "description": "string representation of character n; inverse of ichar",
        "example": "",
        "parameters": [
            {
                "name": "n",
                "description": "integer to convert",
                "type": "integer"
            }
        ],
        "type": "function"
    },
    {
        "name": "check",
        "description": "perform all check commands",
        "type": "keyword"
    },
    {
        "name": "close",
        "description": "close file",
        "type": "keyword"
    },
    {
        "name": "commands",
        "description": "read and interpret commands from a file",
        "type": "keyword"
    },
    {
        "name": "complements",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "contains",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "continue",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "cos",
        "datatype": "float",
        "description": "cosine",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "cross",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "ctime",
        "datatype": "string",
        "description": "time t as a string",
        "example": "",
        "parameters": [
            {
                "name": "t",
                "default": null,
                "description": "time - leave blank for current time",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "Current",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "data",
        "description": "switch to data mode; optionally include file contents",
        "type": "keyword"
    },
    {
        "name": "default",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "delete",
        "description": "delete model entities",
        "type": "keyword"
    },
    {
        "name": "diff",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "difference",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "dimen",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "display",
        "description": "print model entities and expressions; also csvdisplay and _display",
        "type": "keyword"
    },
    {
        "name": "div",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "drop",
        "description": "drop a constraint or objective",
        "type": "keyword"
    },
    {
        "name": "else",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "end",
        "description": "end input from current input file",
        "type": "keyword"
    },
    {
        "name": "environ",
        "description": "set environment for a problem instance",
        "type": "keyword"
    },
    {
        "name": "exists",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "exit",
        "description": "exit AMPL with status value",
        "type": "keyword"
    },
    {
        "name": "exp",
        "datatype": "float",
        "description": "ex",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "expand",
        "description": "show expansion of model entities",
        "type": "keyword"
    },
    {
        "name": "Exponential",
        "datatype": "number",
        "description": "Returns a random value from an Exponential distribution. density(x) = e^-x , x>=0",
        "example": "",
        "parameters": [],
        "type": "function"
    },
    {
        "name": "false",
        "datatype": "boolean",
        "description": "false (boolean)",
        "type": "constant"
    },
    {
        "name": "first",
        "datatype": "object",
        "description": "first member of S",
        "example": "",
        "parameters": [
            {
                "name": "S",
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "fix",
        "description": "freeze a variable at its current value",
        "type": "keyword"
    },
    {
        "name": "floor",
        "datatype": "float",
        "description": "floor of x (next lower integer)",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "for",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "forall",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "Gamma",
        "datatype": "number",
        "description": "Returns a random value from a Gamma distribution. density(x) = x a^-1 e^-x / gamma(a), x>=0",
        "example": "",
        "parameters": [
            {
                "name": "a",
                "default": 1,
                "max": 100,
                "min": 0,
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "gsub",
        "datatype": "string",
        "description": "substitute repl for all occurrences of regular expression re in s",
        "example": "",
        "parameters": [
            {
                "name": "re",
                "description": "regular expression",
                "type": "string"
            },
            {
                "name": "repl",
                "description": "replacement string",
                "type": "string"
            },
            {
                "name": "s",
                "description": "string to test",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "ichar",
        "datatype": "integer",
        "description": "Unicode value of the first character in string s",
        "example": "",
        "parameters": [
            {
                "name": "s",
                "description": "string to convert",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "if",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "IN",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "in",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "include",
        "description": "include file contents",
        "type": "keyword"
    },
    {
        "name": "indexarity",
        "datatype": "integer",
        "description": "arity of entity E's indexing set card, arity, and indexarity also apply to unordered sets",
        "example": "",
        "parameters": [
            {
                "name": "E",
                "description": "entity",
                "type": "object"
            }
        ],
        "type": "function"
    },
    {
        "name": "Initial",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "initial",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "INOUT",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "integer",
        "description": "",
        "type": "type"
    },
    {
        "name": "inter",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "intersect",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "intersection",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "Irand224",
        "datatype": "integer",
        "description": "Returns a random integer in the range [0, 224).",
        "example": "",
        "parameters": [],
        "type": "function"
    },
    {
        "name": "last",
        "datatype": "object",
        "description": "last member of S",
        "example": "",
        "parameters": [
            {
                "name": "S",
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "length",
        "datatype": "integer",
        "description": "length of string s",
        "example": "",
        "parameters": [
            {
                "name": "s",
                "description": "string to test",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "less",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "let",
        "description": "change data values",
        "type": "keyword"
    },
    {
        "name": "load",
        "description": "load dynamic function library",
        "type": "keyword"
    },
    {
        "name": "LOCAL",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "local",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "log",
        "datatype": "float",
        "description": "loge ",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "log10",
        "datatype": "float",
        "description": "log10 ",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "logical",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "match",
        "datatype": "string",
        "description": "starting position of regular expression re in s, or 0 if not found",
        "example": "",
        "parameters": [
            {
                "name": "re",
                "description": "regular expression",
                "type": "string"
            },
            {
                "name": "s",
                "description": "string to test",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "max",
        "datatype": "float",
        "description": "maximum (2 or more arguments)",
        "example": "",
        "parameters": [
            {
                "name": "...",
                "description": "",
                "type": "float"
            },
            {
                "name": "x",
                "description": "",
                "type": "float"
            },
            {
                "name": "y",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "maximize",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "member",
        "datatype": "object",
        "description": "jth member of S; 1 <= j <= card(S), j integer",
        "example": "",
        "parameters": [
            {
                "name": "j",
                "description": "integer",
                "type": "integer"
            },
            {
                "name": "S",
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "min",
        "datatype": "float",
        "description": "minimum (2 or more arguments)",
        "example": "",
        "parameters": [
            {
                "name": "...",
                "description": "",
                "type": "float"
            },
            {
                "name": "x",
                "description": "",
                "type": "float"
            },
            {
                "name": "y",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "minimize",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "model",
        "description": "switch to model mode; optionally include file contents",
        "type": "keyword"
    },
    {
        "name": "next",
        "datatype": "object",
        "description": "next member of set for which e is dummy index",
        "example": "",
        "parameters": [
            {
                "name": "e",
                "description": "object",
                "type": "object"
            },
            {
                "name": "k",
                "default": 1,
                "description": "integer",
                "type": "integer"
            },
            {
                "name": "S",
                "default": null,
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "nextw",
        "datatype": "object",
        "description": "wrapping version of next",
        "example": "",
        "parameters": [
            {
                "name": "e",
                "description": "object",
                "type": "object"
            },
            {
                "name": "k",
                "default": 1,
                "description": "integer",
                "type": "integer"
            },
            {
                "name": "S",
                "default": null,
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "node",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "Normal",
        "datatype": "number",
        "description": "Returns a random value from a Normal distribution. density(x) = e^-(x-avg)^2/(2*std^2) / (std*sqrt(2*pi))",
        "example": "",
        "parameters": [
            {
                "name": "avg",
                "default": 0,
                "max": 100,
                "min": 0,
                "type": "float"
            },
            {
                "name": "std",
                "default": 1,
                "max": 100,
                "min": 0,
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "Normal01",
        "datatype": "number",
        "description": "Returns a random value from a Normal distribution with mean 0 and standard deviation 1. density(x) = e^-(x-0)^2/(2*1^2) / (1*sqrt(2*pi))",
        "example": "",
        "parameters": [],
        "type": "function"
    },
    {
        "name": "not",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "notin",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "null",
        "datatype": "null",
        "description": "null (no value)",
        "type": "constant"
    },
    {
        "name": "num",
        "datatype": "number",
        "description": "convert string s to number; error if stripping leading and trailing white space does not yield a valid decimal number",
        "example": "",
        "parameters": [
            {
                "name": "s",
                "description": "string to convert",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "num0",
        "datatype": "number",
        "description": "strip leading white space, and interpret as much as possible of s as a number, but do not raise error",
        "example": "",
        "parameters": [
            {
                "name": "s",
                "description": "string to convert",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "nvars",
        "datatype": "integer",
        "description": "number of variables in current model",
        "type": "constant"
    },
    {
        "name": "objective",
        "description": "select an objective to be optimized",
        "type": "keyword"
    },
    {
        "name": "option",
        "description": "set or display option values",
        "type": "keyword"
    },
    {
        "name": "or",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "ord",
        "datatype": "integer",
        "description": "ordinal position of member e in set for which it is dummy index",
        "example": "",
        "parameters": [
            {
                "name": "e",
                "description": "object",
                "type": "object"
            },
            {
                "name": "S",
                "default": null,
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "ord0",
        "datatype": "integer",
        "description": "same as ord",
        "example": "",
        "parameters": [
            {
                "name": "e",
                "description": "object",
                "type": "object"
            },
            {
                "name": "S",
                "default": null,
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "OUT",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "out",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "param",
        "description": "decalre a parameter",
        "type": "declaration"
    },
    {
        "name": "mod",
        "datatype": "integer",
        "description": "remainder of x/y -- can be called with x mod y",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "integer",
                "type": "integer"
            },
            {
                "name": "y",
                "description": "integer",
                "type": "integer"
            }
        ],
        "type": "function"
    },
    {
        "name": "Poisson",
        "datatype": "number",
        "description": "Returns a random value from a Poisson distribution. density(x) = e^-lambda lambda^x / x!, x>=0",
        "example": "",
        "parameters": [
            {
                "name": "lambda",
                "default": 1,
                "max": 100,
                "min": 0,
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "precision",
        "datatype": "float",
        "description": "x rounded to n significant decimal digits",
        "example": "",
        "parameters": [
            {
                "name": "n",
                "description": "precision",
                "type": "integer"
            },
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "prev",
        "datatype": "object",
        "description": "previous member of set for which e is dummy index",
        "example": "",
        "parameters": [
            {
                "name": "e",
                "description": "object",
                "type": "object"
            },
            {
                "name": "k",
                "default": 1,
                "description": "integer",
                "type": "integer"
            },
            {
                "name": "S",
                "default": null,
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "prevw",
        "datatype": "object",
        "description": "wrapping version of prev",
        "example": "",
        "parameters": [
            {
                "name": "e",
                "description": "object",
                "type": "object"
            },
            {
                "name": "k",
                "default": 1,
                "description": "integer",
                "type": "integer"
            },
            {
                "name": "S",
                "default": null,
                "description": "set",
                "type": "set"
            }
        ],
        "type": "function"
    },
    {
        "name": "print",
        "description": "print model entities and expressions unformatted",
        "type": "keyword"
    },
    {
        "name": "printf",
        "description": "print model entities and expressions formatted",
        "type": "keyword"
    },
    {
        "name": "problem",
        "description": "define or switch to a named problem",
        "type": "keyword"
    },
    {
        "name": "prod",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "purge",
        "description": "remove model entities",
        "type": "keyword"
    },
    {
        "name": "quit",
        "description": "terminate AMPL",
        "type": "keyword"
    },
    {
        "name": "read",
        "description": "table take input from a data table",
        "type": "keyword"
    },
    {
        "name": "redeclare",
        "description": "change declaration of entity",
        "type": "keyword"
    },
    {
        "name": "reload",
        "description": "reload dynamic function library",
        "type": "keyword"
    },
    {
        "name": "remove",
        "description": "remove file",
        "type": "keyword"
    },
    {
        "name": "reset",
        "description": "reset specified entities to their initial state",
        "type": "keyword"
    },
    {
        "name": "restore",
        "description": "undo a drop command",
        "type": "keyword"
    },
    {
        "name": "round",
        "datatype": "float",
        "description": "x rounded to n digits past decimal point",
        "example": "",
        "parameters": [
            {
                "name": "n",
                "default": 0,
                "description": "precision",
                "type": "integer"
            },
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "set",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "setof",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "shell",
        "description": "temporary escape to operating system to run commands",
        "type": "keyword"
    },
    {
        "name": "shell_exitcode",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "function",
        "description": "define a function",
        "type": "declaration"
    },
    {
        "name": "show",
        "description": "show names of model entities",
        "type": "keyword"
    },
    {
        "name": "sin",
        "datatype": "float",
        "description": "sine",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "sinh",
        "datatype": "float",
        "description": "hyperbolic sine",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": "",
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "solexpand",
        "description": "show expansion as seen by solver",
        "type": "keyword"
    },
    {
        "name": "solution",
        "description": "import variable values as if from a solver",
        "type": "keyword"
    },
    {
        "name": "solve",
        "description": "send current instance to a solver and retrieve solution",
        "type": "keyword"
    },
    {
        "name": "solve_exitcode",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "solve_message",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "solve_result",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "solve_result_num",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "sprintf",
        "datatype": "string",
        "description": "format arguments according to format string fmt",
        "example": "",
        "parameters": [
            {
                "name": "exprlistopt",
                "default": "none",
                "description": "list of expressions to format (optional)",
                "type": "expression"
            },
            {
                "name": "f",
                "description": "format string",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "sqrt",
        "datatype": "float",
        "description": "square root",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": ""
            }
        ],
        "type": "function"
    },
    {
        "name": "sub",
        "datatype": "string",
        "description": "substitute repl for the first occurrence of regular expression re in s",
        "example": "",
        "parameters": [
            {
                "name": "re",
                "description": "regular expression",
                "type": "string"
            },
            {
                "name": "repl",
                "description": "replacement string",
                "type": "string"
            },
            {
                "name": "s",
                "description": "string to test",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "subj to",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "subject to",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "substr",
        "datatype": "string",
        "description": "n character substring of s starting at position m; if n omitted, rest of string",
        "example": "",
        "parameters": [
            {
                "name": "m",
                "description": "starting position",
                "type": "integer"
            },
            {
                "name": "n",
                "default": "length(s) - m + 1",
                "description": "length of substring (optional)",
                "type": "integer"
            },
            {
                "name": "s",
                "description": "string to test",
                "type": "string"
            }
        ],
        "type": "function"
    },
    {
        "name": "suffix",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "sum",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "symbolic",
        "description": "",
        "type": "type"
    },
    {
        "name": "symdiff",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "table",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "tan",
        "datatype": "float",
        "description": "tangent",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": ""
            }
        ],
        "type": "function"
    },
    {
        "name": "tanh",
        "datatype": "float",
        "description": "hyperbolic tangent",
        "example": "",
        "parameters": [
            {
                "name": "x",
                "description": ""
            }
        ],
        "type": "function"
    },
    {
        "name": "then",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "time",
        "datatype": "float",
        "description": "current time in seconds",
        "example": "",
        "parameters": [],
        "type": "function"
    },
    {
        "name": "true",
        "datatype": "boolean",
        "description": "true (boolean)",
        "type": "constant"
    },
    {
        "name": "trunc",
        "datatype": "float",
        "description": "x truncated to n digits past decimal point",
        "example": "",
        "parameters": [
            {
                "name": "n",
                "default": 0,
                "description": "precision"
            },
            {
                "name": "x",
                "description": ""
            }
        ],
        "type": "function"
    },
    {
        "name": "unfix",
        "description": "undo a fix command",
        "type": "keyword"
    },
    {
        "name": "Uniform",
        "datatype": "number",
        "description": "Returns a random value from a Uniform distribution. density(x) = 1/(n-m), x in [m, n]",
        "example": "",
        "parameters": [
            {
                "name": "m",
                "default": 0,
                "max": 100,
                "min": 0,
                "type": "float"
            },
            {
                "name": "n",
                "default": 1,
                "max": 100,
                "min": 0,
                "type": "float"
            }
        ],
        "type": "function"
    },
    {
        "name": "Uniform01",
        "datatype": "number",
        "description": "Returns a random value from a Uniform distribution. density(x) = 1, x in [0, 1]",
        "example": "",
        "parameters": [],
        "type": "function"
    },
    {
        "name": "union",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "unload",
        "description": "unload dynamic function library",
        "type": "keyword"
    },
    {
        "name": "until",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "update",
        "description": "allow updating data",
        "type": "keyword"
    },
    {
        "name": "var",
        "description": "",
        "type": "declaration"
    },
    {
        "name": "while",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "within",
        "description": "",
        "type": "keyword"
    },
    {
        "name": "write",
        "description": "table write data to a data table",
        "type": "keyword"
    },
    {
        "name": "xref",
        "description": "show dependencies among entities",
        "type": "keyword"
    }
]