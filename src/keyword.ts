/**
 * Generated by https://quicktype.io
 * PLEASE RECREATE IF THE SCHEMA IS CHANGED AND SAVE JSDOCs
 */

/**
 * keyword interface for reading from keyword.json
 * @export Keyword
 * @interface Keyword
 * @property {string} name - the name of the keyword
 * @property {DatatypeEnum} [datatype] - the datatype of the keyword
 * @property {string} description - the description of the keyword
 * @property {TypeEnum} type - the type of the keyword
 * @property {string} [example] - an example of the keyword
 * @property {Parameter[]} [parameters] - the parameters of the keyword
 *
 */
export interface Keyword {
  name: string;
  datatype?: DatatypeEnum;
  description: string;
  type: TypeEnum;
  example?: string;
  parameters?: Parameter[];
}

/**
 * enum for the datatype of a keyword
 * @export DatatypeEnum
 * @enum {string}
 * @readonly
 * @property {string} Boolean - boolean datatype
 * @property {string} Expression - expression datatype
 * @property {string} Float - float datatype
 * @property {string} Integer - integer datatype
 * @property {string} Null - null datatype
 * @property {string} Object - object datatype
 * @property {string} Set - set datatype
 * @property {string} String - string datatype
 *
 */
export enum DatatypeEnum {
  Boolean = "boolean",
  Expression = "expression",
  Float = "float",
  Integer = "integer",
  Null = "null",
  Object = "object",
  Set = "set",
  String = "string",
}

/**
 * interface for the parameters of a keyword
 * @export Parameter
 * @interface Parameter
 * @property {string} name - the name of the parameter
 * @property {string} [description] - the description of the parameter
 * @property {DatatypeEnum} [type] - the datatype of the parameter
 * @property {number | null | string} [default] - the default value of the parameter
 * @property {number} [max] - the maximum value of the parameter
 * @property {number} [min] - the minimum value of the parameter
 */
export interface Parameter {
  name: string;
  description?: string;
  type?: DatatypeEnum;
  default?: number | null | string;
  max?: number;
  min?: number;
}

/**
 * enum for the type of a keyword
 * @export TypeEnum
 * @enum {string}
 * @readonly
 * @property {string} Constant - constant keyword
 * @property {string} Declaration - declaration keyword
 * @property {string} Function - function keyword
 * @property {string} Keyword - keyword keyword
 * @property {string} Type - type keyword
 */

export enum TypeEnum {
  Constant = "constant",
  Declaration = "declaration",
  Function = "function",
  Keyword = "keyword",
  Type = "type",
}
